{"version":3,"sources":["webpack://extension-kitchensink/./src/components/CoreSDKFunctions/CoreSDKFunctions.tsx","webpack://extension-kitchensink/./src/components/SandboxStatus/SandboxStatus.tsx"],"names":["imageData","setImageData","useState","location","useLocation","routeData","setRouteData","messages","setMessages","sdk","getCoreSDK2","useEffect","search","pathname","includes","route","isEqual","routeState","state","updateMessages","JSON","stringify","message","error","prevMessages","maybeLineBreak","length","fullMessage","allConnectionsClick","ok","all_connections","forEach","connection","name","rawLookImageClick","looks","all_looks","value","run_look","look_id","id","result_format","Blob","URL","createObjectURL","btoa","searchFoldersClick","search_folders","parent_id","inlineQueryClick","run_inline_query","limit","body","total","model","view","fields","sorts","Heading","mt","Box","display","flexDirection","width","maxWidth","onClick","src","undefined","p","TextArea","height","readOnly","SandboxStatus","sandboxStatus","setSandboxStatus","window","parent","looker","version","err","Paragraph","my"],"mappings":"0RAqKA,QArIyB,KACvB,IAAOA,EAAWC,IAAgBC,gBAC5BC,GAAWC,WACVC,EAAWC,IAAgBJ,cAAc,KACzCK,EAAUC,IAAeN,cAAS,IACnCO,GAAMC,oBAEZC,gBAAU,KACR,GAAIR,EAASS,QAAUT,EAASU,SAASC,SAAS,KAAM,CACtD,IAAMC,EAAQ,GAAH,OAAMZ,EAASU,UAAf,OAA0BV,EAASS,QAE5CP,EAAUU,QAAUA,GACnBC,IAAQX,EAAUY,WAAYd,EAASe,SAExCZ,EAAa,CAAES,QAAOE,WAAYd,EAASe,QAC3CC,EAAe,aAAD,OACChB,EAASU,UADV,OACqBV,EAASS,OAD9B,YACwCQ,KAAKC,UACvDlB,EAASe,aAKhB,CAACf,IAEJ,IAAMgB,EAAiB,CAACG,EAAiBC,KACvCf,GAAagB,IACX,IAAMC,EAAyC,IAAxBD,EAAaE,OAAe,GAAK,KAClDC,EAAcJ,EAAQ,GAAH,OAAMD,EAAN,aAAkBC,GAAUD,EACrD,gBAAUE,GAAV,OAAyBC,GAAzB,OAA0CE,OAIxCC,EAAmB,sBAAG,YAC1B,WACsBnB,EAAIoB,GAAGpB,EAAIqB,oBACzBC,SAASC,IACbb,EAAea,EAAWC,MAAQ,OAEpC,MAAOV,GACPJ,EAAe,4BAA6BI,OAPvB,qDAWnBW,EAAiB,sBAAG,YACxB,IACE,IAAMC,QAAc1B,EAAIoB,GAAGpB,EAAI2B,UAAU,OACzC,GAAID,EAAMT,OAAS,EAAG,CACpB,IAAMW,QAAmB5B,EAAIoB,GAC3BpB,EAAI6B,SAAS,CACXC,QAASJ,EAAM,GAAGK,GAClBC,cAAe,SAGfJ,aAAiBK,KACnBzC,EAAa0C,IAAIC,gBAAgBP,IAEjCpC,EAAa4C,KAAK,yBAAD,OAA0BR,KAE7ClB,EAAe,kBAEfA,EAAe,sBAEjB,MAAOI,GACPJ,EAAe,4BAA6BI,OApBzB,qDAwBjBuB,EAAkB,sBAAG,YACzB,IACE,IAAMT,QAAc5B,EAAIoB,GAAGpB,EAAIsC,eAAe,CAAEC,UAAW,OAC3D7B,EAAeC,KAAKC,UAAUgB,EAAO,KAAM,IAC3C,MAAOd,GACPJ,EAAe,gCAAiCI,OAL5B,qDASlB0B,EAAgB,sBAAG,YACvB,IACE,IAAMZ,QAAc5B,EAAIoB,GACtBpB,EAAIyC,iBAAiB,CACnBT,cAAe,cACfU,MAAO,GACPC,KAAM,CACJC,OAAO,EACPC,MAAO,UACPC,KAAM,QACNC,OAAQ,CAAC,YAAa,UACtBC,MAAO,CAAC,sBAIdtC,EAAeC,KAAKC,UAAUgB,EAAO,KAAM,IAC3C,MAAOd,GACPJ,EAAe,8BAA+BI,OAjB5B,qDA0BtB,OACE,gCACE,gBAAC,EAAAmC,QAAD,CAASC,GAAG,UAAZ,sBACA,gBAAC,IAAD,MACA,gBAAC,EAAAC,IAAD,CAAKC,QAAQ,OAAOC,cAAc,OAChC,gBAAC,EAAAF,IAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,MAAM,MAAMC,SAAS,QAC9D,gBAAC,IAAD,CAAeL,GAAG,QAAQM,QAASrC,GAAnC,gCAGA,gBAAC,IAAD,CAAe+B,GAAG,QAAQM,QAASnB,GAAnC,+CAGA,gBAAC,IAAD,CAAea,GAAG,QAAQM,QAAShB,GAAnC,8BAGA,gBAAC,IAAD,CAAeU,GAAG,QAAQM,QAAS/B,GAAnC,qBAGClC,GAAa,uBAAKkE,IAAKlE,IACxB,gBAAC,IAAD,CAAe2D,GAAG,QAAQM,QAxBP,KACzBzD,EAAY,IACZP,OAAakE,KAsBP,mBAIF,gBAAC,EAAAP,IAAD,CAAKG,MAAM,MAAMK,EAAE,QAAQJ,SAAS,QAClC,gBAAC,EAAAK,SAAD,CAAUC,OAAO,OAAOC,UAAQ,EAAClC,MAAO9B,S,wEClIrCiE,EAA8C,KACzD,IAAOC,EAAeC,IAAoBxE,cAAS,IAgBnD,OAdAS,gBAAU,KACR,IAAI,MAMF,UAL2BgE,OAAeC,OAK7BC,cAAb,SAAqBC,QACrBJ,EAAiB,OACjB,MAAOK,GACPL,EAAiB,OAElB,IAGD,gBAAC,EAAAM,UAAD,CAAWC,GAAG,UAAd,qBACoB,yBAAIR,GADxB","file":"coresdk_functions.bundle.js","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2021 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport isEqual from 'lodash/isEqual'\nimport React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Heading, Box, ButtonOutline, TextArea } from '@looker/components'\nimport { getCoreSDK2 } from '@looker/extension-sdk-react'\nimport { Looker40SDK } from '@looker/sdk'\nimport { SandboxStatus } from '../SandboxStatus'\n\nconst CoreSDKFunctions = () => {\n  const [imageData, setImageData] = useState<string>()\n  const location = useLocation()\n  const [routeData, setRouteData] = useState<any>({})\n  const [messages, setMessages] = useState('')\n  const sdk = getCoreSDK2<Looker40SDK>()\n\n  useEffect(() => {\n    if (location.search || location.pathname.includes('?')) {\n      const route = `${location.pathname}${location.search}`\n      if (\n        routeData.route !== route ||\n        !isEqual(routeData.routeState, location.state)\n      ) {\n        setRouteData({ route, routeState: location.state })\n        updateMessages(\n          `location: ${location.pathname}${location.search} ${JSON.stringify(\n            location.state\n          )}`\n        )\n      }\n    }\n  }, [location])\n\n  const updateMessages = (message: string, error?: any) => {\n    setMessages((prevMessages) => {\n      const maybeLineBreak = prevMessages.length === 0 ? '' : '\\n'\n      const fullMessage = error ? `${message}\\n${error}` : message\n      return `${prevMessages}${maybeLineBreak}${fullMessage}`\n    })\n  }\n\n  const allConnectionsClick = async () => {\n    try {\n      const value = await sdk.ok(sdk.all_connections())\n      value.forEach((connection: any) => {\n        updateMessages(connection.name || '')\n      })\n    } catch (error) {\n      updateMessages('Error getting connections', error)\n    }\n  }\n\n  const rawLookImageClick = async () => {\n    try {\n      const looks = await sdk.ok(sdk.all_looks('id'))\n      if (looks.length > 0) {\n        const value: any = await sdk.ok(\n          sdk.run_look({\n            look_id: looks[0].id!,\n            result_format: 'png',\n          })\n        )\n        if (value instanceof Blob) {\n          setImageData(URL.createObjectURL(value))\n        } else {\n          setImageData(btoa(`data:image/png;base64,${value}`))\n        }\n        updateMessages('Got image')\n      } else {\n        updateMessages('No looks to render')\n      }\n    } catch (error) {\n      updateMessages('Error getting connections', error)\n    }\n  }\n\n  const searchFoldersClick = async () => {\n    try {\n      const value = await sdk.ok(sdk.search_folders({ parent_id: '1' }))\n      updateMessages(JSON.stringify(value, null, 2))\n    } catch (error) {\n      updateMessages('Error invoking search folders', error)\n    }\n  }\n\n  const inlineQueryClick = async () => {\n    try {\n      const value = await sdk.ok(\n        sdk.run_inline_query({\n          result_format: 'json_detail',\n          limit: 10,\n          body: {\n            total: true,\n            model: 'thelook',\n            view: 'users',\n            fields: ['last_name', 'gender'],\n            sorts: [`last_name desc`],\n          },\n        })\n      )\n      updateMessages(JSON.stringify(value, null, 2))\n    } catch (error) {\n      updateMessages('Error invoking inline query', error)\n    }\n  }\n\n  const clearMessagesClick = () => {\n    setMessages('')\n    setImageData(undefined)\n  }\n\n  return (\n    <>\n      <Heading mt=\"xlarge\">Core SDK Functions</Heading>\n      <SandboxStatus />\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Box display=\"flex\" flexDirection=\"column\" width=\"50%\" maxWidth=\"40vw\">\n          <ButtonOutline mt=\"small\" onClick={allConnectionsClick}>\n            All connections (get method)\n          </ButtonOutline>\n          <ButtonOutline mt=\"small\" onClick={searchFoldersClick}>\n            Search folders (get method with parameters)\n          </ButtonOutline>\n          <ButtonOutline mt=\"small\" onClick={inlineQueryClick}>\n            Inline query (post method)\n          </ButtonOutline>\n          <ButtonOutline mt=\"small\" onClick={rawLookImageClick}>\n            Render Look image\n          </ButtonOutline>\n          {imageData && <img src={imageData} />}\n          <ButtonOutline mt=\"small\" onClick={clearMessagesClick}>\n            Clear messages\n          </ButtonOutline>\n        </Box>\n        <Box width=\"50%\" p=\"small\" maxWidth=\"40vw\">\n          <TextArea height=\"60vh\" readOnly value={messages} />\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default CoreSDKFunctions\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2021 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport React, { useEffect, useState } from 'react'\nimport { Paragraph } from '@looker/components'\nimport { SandboxStatusProps } from './types'\n\nexport const SandboxStatus: React.FC<SandboxStatusProps> = () => {\n  const [sandboxStatus, setSandboxStatus] = useState('')\n\n  useEffect(() => {\n    try {\n      const parentWindow: any = (window as any).parent\n      // Attempt to get data from the parent window. This\n      // will fail in a sandboxed environment and in most\n      // cases we want this to fail.\n      // eslint-disable-next-line no-unused-expressions\n      parentWindow.looker?.version\n      setSandboxStatus('NOT')\n    } catch (err) {\n      setSandboxStatus('')\n    }\n  }, [])\n\n  return (\n    <Paragraph my=\"medium\">\n      This extension is <b>{sandboxStatus}</b> sandboxed.\n    </Paragraph>\n  )\n}\n"],"sourceRoot":""}